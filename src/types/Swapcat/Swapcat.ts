// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Swapcat__tokeninfoResult {
  value0: BigInt;
  value1: string;
  value2: string;

  constructor(value0: BigInt, value1: string, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): string {
    return this.value2;
  }
}

export class Swapcat__showofferResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): Address {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }
}

export class Swapcat extends ethereum.SmartContract {
  static bind(address: Address): Swapcat {
    return new Swapcat("Swapcat", address);
  }

  tokeninfo(_tokenaddr: Address): Swapcat__tokeninfoResult {
    let result = super.call(
      "tokeninfo",
      "tokeninfo(address):(uint256,string,string)",
      [ethereum.Value.fromAddress(_tokenaddr)]
    );

    return new Swapcat__tokeninfoResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString()
    );
  }

  try_tokeninfo(
    _tokenaddr: Address
  ): ethereum.CallResult<Swapcat__tokeninfoResult> {
    let result = super.tryCall(
      "tokeninfo",
      "tokeninfo(address):(uint256,string,string)",
      [ethereum.Value.fromAddress(_tokenaddr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Swapcat__tokeninfoResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString()
      )
    );
  }

  deleteoffer(_offerid: i32): string {
    let result = super.call("deleteoffer", "deleteoffer(uint24):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))
    ]);

    return result[0].toString();
  }

  try_deleteoffer(_offerid: i32): ethereum.CallResult<string> {
    let result = super.tryCall("deleteoffer", "deleteoffer(uint24):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  makeoffer(
    _offertoken: Address,
    _buyertoken: Address,
    _price: BigInt,
    _offerid: i32
  ): i32 {
    let result = super.call(
      "makeoffer",
      "makeoffer(address,address,uint256,uint24):(uint24)",
      [
        ethereum.Value.fromAddress(_offertoken),
        ethereum.Value.fromAddress(_buyertoken),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))
      ]
    );

    return result[0].toI32();
  }

  try_makeoffer(
    _offertoken: Address,
    _buyertoken: Address,
    _price: BigInt,
    _offerid: i32
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "makeoffer",
      "makeoffer(address,address,uint256,uint24):(uint24)",
      [
        ethereum.Value.fromAddress(_offertoken),
        ethereum.Value.fromAddress(_buyertoken),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  showoffer(_offerid: i32): Swapcat__showofferResult {
    let result = super.call(
      "showoffer",
      "showoffer(uint24):(address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))]
    );

    return new Swapcat__showofferResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_showoffer(_offerid: i32): ethereum.CallResult<Swapcat__showofferResult> {
    let result = super.tryCall(
      "showoffer",
      "showoffer(uint24):(address,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Swapcat__showofferResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  pricepreview(_offerid: i32, _amount: BigInt): BigInt {
    let result = super.call(
      "pricepreview",
      "pricepreview(uint24,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid)),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_pricepreview(
    _offerid: i32,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pricepreview",
      "pricepreview(uint24,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid)),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buy(_offerid: i32, _offertokenamount: BigInt, _price: BigInt): string {
    let result = super.call("buy", "buy(uint24,uint256,uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid)),
      ethereum.Value.fromUnsignedBigInt(_offertokenamount),
      ethereum.Value.fromUnsignedBigInt(_price)
    ]);

    return result[0].toString();
  }

  try_buy(
    _offerid: i32,
    _offertokenamount: BigInt,
    _price: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall("buy", "buy(uint24,uint256,uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerid)),
      ethereum.Value.fromUnsignedBigInt(_offertokenamount),
      ethereum.Value.fromUnsignedBigInt(_price)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getoffercount(): i32 {
    let result = super.call("getoffercount", "getoffercount():(uint24)", []);

    return result[0].toI32();
  }

  try_getoffercount(): ethereum.CallResult<i32> {
    let result = super.tryCall("getoffercount", "getoffercount():(uint24)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class LosttokensCall extends ethereum.Call {
  get inputs(): LosttokensCall__Inputs {
    return new LosttokensCall__Inputs(this);
  }

  get outputs(): LosttokensCall__Outputs {
    return new LosttokensCall__Outputs(this);
  }
}

export class LosttokensCall__Inputs {
  _call: LosttokensCall;

  constructor(call: LosttokensCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LosttokensCall__Outputs {
  _call: LosttokensCall;

  constructor(call: LosttokensCall) {
    this._call = call;
  }
}

export class DeleteofferCall extends ethereum.Call {
  get inputs(): DeleteofferCall__Inputs {
    return new DeleteofferCall__Inputs(this);
  }

  get outputs(): DeleteofferCall__Outputs {
    return new DeleteofferCall__Outputs(this);
  }
}

export class DeleteofferCall__Inputs {
  _call: DeleteofferCall;

  constructor(call: DeleteofferCall) {
    this._call = call;
  }

  get _offerid(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class DeleteofferCall__Outputs {
  _call: DeleteofferCall;

  constructor(call: DeleteofferCall) {
    this._call = call;
  }

  get value0(): string {
    return this._call.outputValues[0].value.toString();
  }
}

export class MakeofferCall extends ethereum.Call {
  get inputs(): MakeofferCall__Inputs {
    return new MakeofferCall__Inputs(this);
  }

  get outputs(): MakeofferCall__Outputs {
    return new MakeofferCall__Outputs(this);
  }
}

export class MakeofferCall__Inputs {
  _call: MakeofferCall;

  constructor(call: MakeofferCall) {
    this._call = call;
  }

  get _offertoken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _buyertoken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _offerid(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class MakeofferCall__Outputs {
  _call: MakeofferCall;

  constructor(call: MakeofferCall) {
    this._call = call;
  }

  get value0(): i32 {
    return this._call.outputValues[0].value.toI32();
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get _offerid(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _offertokenamount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get value0(): string {
    return this._call.outputValues[0].value.toString();
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
